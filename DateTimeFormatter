-NSDateFormatter Styles
NSDateFormatterShortStyle 	1/10/14 		, 9:05 PM
NSDateFormatterMediumStyle	Jan 10, 2014		, 9:05:41 PM
NSDateFormatterLongStyle	January 10, 2014	, 9:05:41 PM GMT+8
NSDateFormatterFullStyle	Friday, January 10, 2014, 9:05:41 PM Philippine Standard Time


-patterns
yyyy.MM.dd G 'at' HH:mm:ss zzz 	, 2014.01.10 AD at 09:05:41 GMT+8
EEE, MMM d, ''yy 	              ,  Sat, Jan 10, ’14
h:mm a 	                        , 9:05 PM
hh 'o''clock' a, zzzz 	        , 09 o’clock PM, Philippine Standard Time
K:mm a, z 	                    , 9:05 PM, GMT+8
yyyyy.MMMM.dd GGG hh:mm aaa 	  , 02014.January.10 AD 09:05 PM

-relative formatting
dateFormatter.doesRelativeDateFormatting = YES;
NSLog( @"date: %@" , [formatter stringFromDate: [NSDate date]] );

-singletons

//static instance
- (void)formatter:(NSDate *)date
{
    static NSDateFormatter *dateFormatter = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
		dateFormatter = [[NSDateFormatter alloc] init];
		dateFormatter.dateFormat = @"EEE, dd MMM yyyy HH:mm:ss Z";
    });

    NSString *string = [dateFormatter stringFromDate: date];

    
}

// singleton method
+ (NSDateFormatter *)formatter
{
    static NSDateFormatter *dateFormatter = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        dateFormatter = [[NSDateFormatter alloc] init];
        dateFormatter.dateStyle = NSDateFormatterFullStyle;
        dateFormatter.timeStyle = NSDateFormatterFullStyle;
    });

    return dateFormatter;
}

// Time formatter
+ (NSString *)timeFormatter:(NSTimeInterval)time {
    
    NSString *formattedTime;
    int tHours = (time / 3600);
    int tMins = ((time / 60) - tHours*60);
    int tSecs = (time) - (tMins*60) - (tHours*3600);
    
    if (time > 3600) {
        // longer than an hour
        formattedTime = [NSString stringWithFormat:@"%i:%02d:%02d", tHours, tMins, tSecs ];
    } else if (time < 3600 && time > 60) {
        // between a minute and an hour
        formattedTime = [NSString stringWithFormat:@"%02d:%02d", tMins, tSecs ];
    } else {
        // under a minute
        formattedTime = [NSString stringWithFormat:@"0:%02d", tSecs ];
    }
    
    return formattedTime;
    
}

// Local current time
NSDate* sourceDate = [NSDate date];
    
NSTimeZone* sourceTimeZone = [NSTimeZone timeZoneWithAbbreviation:@"GMT"];
NSTimeZone* destinationTimeZone = [NSTimeZone systemTimeZone];
    
NSInteger sourceGMTOffset = [sourceTimeZone secondsFromGMTForDate:sourceDate];
NSInteger destinationGMTOffset = [destinationTimeZone secondsFromGMTForDate:sourceDate];
NSTimeInterval interval = destinationGMTOffset - sourceGMTOffset;
    
NSDate* destinationDate = [[NSDate alloc] initWithTimeInterval:interval sinceDate:sourceDate];

