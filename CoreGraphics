Core Graphics

Core Graphics or Quartz is a drawing engine that draws on a context (could be thought of as a canvas).

Context
There are different ways you can get a context. You can get a hold of the current context using UIKit

CGContextRef currentContext; // a pointer to typedef to hide the star
context = UIGraphicsGetCurrentContext();

or create an Image context with UIKit and then use the same code to get a reference to it

UIGraphicsBeginImageContextWithOptions(CGSizeMake(45,45),YES,2);
CGContextRef context = UIGraphicsGetCurrentContext();

NOTE: Core Graphics uses lower level C functions and core foundation APIs so manual memory management is needed wherever the 
phrases create,copy and ref are used.

Push and pop context
We can also use UIKit to push and pop contexts:

UIGraphicsPushContext(context)
UIGraphicsPopContext(context)

Lines
lineJoin: when a line turns a corner
-joinMiter //default sharp edge
-joinRound
-joinBevel // cut edge (not round, not sharp)
NOTE: You can't mix and match within one drawing
CGContextSetLineJoin(context,kCGLineJoinMiter);

lineCap: normal line end
-lineCapButt // just ends with a square
-lineCapRound // adds a half circle to end
-lineCapSquare // adds a half square to end
NOTE: can't mix and match in one drawing
CGContextSetLineCap(context, kCGLineCapButt);

lineDash: dashed, takes an array of CGFloat to represent the present and absent length parts of the line
CGFloat dashes[] = {12.0,8.0,6.0,14.0};
CGContextSetLineDash(context, 0, dashes, 2); // params: context, phase (how far into the pattern to start), dashes, count(of dashes array)

