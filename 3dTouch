
//checking for 3dTouch availability

UITraitEnvironment protocol
if (self.traitCollection.forceTouchCapability == UIForceTouchCapabilityAvailable) {
}

-static shortcut
// in info.plist
UIApplicationShortcutItems Array
UIApplicationShortcutItemSubtitle
UIApplicationShortcutItemType // unique identifier
UIApplicationShortcutItemTitle
UIApplicationShortcutItemIconType // pre-existing icons
UIApplicationShortcutItemFile // custom icon

// in code
UIApplicationShortcutItem *shortcut = [[UIapplicationShortcutItem alloc]initWithType:localizedType:localizedSubtitle:icon:userInfo:];
[UIApplicationShortcutIcon iconWithTemplateImageName:]; // for adding icon
[UIApplication sharedApplication].shortcutItems = @[shortcut];

-dynamic shortcut
// adding/removing shortcuts
use [UIApplication sharedApplication].shortcutItems to manipulate the shortcutItems array


-Peek and Pop
UIViewControllerPreviewingDelegate
- (nullable UIViewController *)previewingContext:(id <UIViewControllerPreviewing>)previewingContext viewControllerForLocation:(CGPoint)location {
  // retreive cell or detailView
  previewingContext.sourceRect = cell.frame
  return detailView;
}

- (void)previewingContext:(id <UIViewControllerPreviewing>)previewingContext commitViewController:(UIViewController *)viewControllerToCommit {
  [self show:viewControllerToCommit sender:self];
}
