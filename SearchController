use <UISearchResultsUpdating>

// UISearchController in code
in viewDidLoad:

    searchController = [[UISearchController alloc]initWithSearchResultsController:nil];
    
    [searchController.searchBar sizeToFit];
    self.tableView.tableHeaderView = searchController.searchBar;
    searchController.searchResultsUpdater = self;
    searchController.dimsBackgroundDuringPresentation = NO;
    self.definesPresentationContext = YES;


@implementation StationsListViewController{
    UISearchController *searchController;
    NSMutableArray *stations;
    NSArray *searchResults;
}

inside task block

stationNames = [[self.stationBeanList objectAtIndex:i] objectForKey:@"stationName"]; // For search results

- (NSInteger)numberOfRowsInSection {
    if(searchController.active) {
        return searchResults.count;
    } else {
        return stationNames.count;
    }
}

-(void)filterContentForText:(NSString *)searchText{
    // stationName is a property of the object we have in our array
    NSPredicate *resultsPredicate = [NSPredicate predicateWithFormat:@"stationName contains[c]%@",searchText];
    searchResults = [stations filteredArrayUsingPredicate:resultsPredicate];
}

-(void)updateSearchResultsForSearchController:(UISearchController *)searchControllerr{
    [self filterContentForText:searchControllerr.searchBar.text];
    [self.tableView reloadData];
}
